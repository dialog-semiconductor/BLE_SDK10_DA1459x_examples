@startuml
participant Host as ht
participant DA1459x as tgt

activate ht
ht -> ht: check for '>'
ht -> tgt: '\\n'
note left
Sending a \n will prompt the DA1459x to
write another > character to the serial port
end note
ht -> ht : check for '>'
ht -> tgt: '\\n'
tgt -> ht: '>'
activate tgt
ht -> ht: check for '>'

ht -> tgt: getsuoserialbuffsz
tgt -> ht: OK 4096
note left
This is the size of the DA1459x command buffer.
It dictates how much code we can transfer at
one time
end note

ht -> tgt: alloc 2048
note left
alloc instructs the DA1459x to allocate a working buffer.
Note for each nibble of firmware we transfer, one byte
is sent to to the DA1469x in ASCII format. A 
buffer of 4096 returned by getsuoserialbuffsz means
we can send 2048 bytes of code at a time.
end note
tgt -> ht: OK

ht -> tgt: fwupdate
note left
Note commands prior to fwupdate are echoed back to the host,
though they are not depicted. This allows the DA1459x to
act as a CLI. Commands are not echoed once the firware 
update process is started (e.g. after the fwupdate command
is received).
end note
tgt -> ht: OK

ht -> tgt: SUOSERIAL_WRITE_STATUS 0 2 0100
tgt -> ht: OK

ht -> tgt: SUOSERIAL_MEM_DEV 0 4 00000013
note left
Indicate the image is to be stored in flash
end note
tgt -> ht: INFO SUOSERIAL_IMG_STARTED OK

ht -> tgt: SUOSERIAL_PATCH_LEN 0 2 0008
note left
0008 is litte endian --> 0x0800 = 2048
This instructs the DA1459x to confirm when 
this many bytes have been received and is used
as a flow control mechanism
end note
tgt -> ht: OK

ht -> tgt: SUOSERIAL_PATCH_DATA 0 2048 <2048 Bytes of data>
note left
Transfer a block of code. The DA1459x confirms it was 
received without issue.
end note
tgt -> ht: INFO SUOSERIAL_CMP_OK

== Keep sending blocks of 2048 until less than 2048 bytes left to send ==

ht -> tgt: SUOSERIAL_PATCH_LEN 0 2 3404
note left
Here we need to transfer the remainder of the
image, but the final block is less than 2048 bytes.
We adjust the PATCH_LEN so the DA1459x will inform
us when the remainder has been processed. 
3404 --> 0x0434 = 1076 bytes remaining to transfer
end note
tgt -> ht: OK

ht -> tgt: SUOSERIAL_PATCH_DATA 0 1076 <1076 Bytes of data>
note left
Transfer the final block
end note

tgt -> ht: INFO SUOSERIAL_CMP_OK

ht -> tgt: SUOSERIAL_READ_MEM_INFO 0 1 00
tgt -> ht: OK 287796
note left
Confirm the size of the image we transferred
end note

ht -> tgt: SUOSERIAL_MEM_DEV 0 4 000000FE
note left
Indicate to the DA1459x the image transfer is complete
end note
tgt -> ht: INFO SUOSERIAL_CMP_OK

ht -> tgt: SUOSERIAL_MEM_DEV 0 4 000000FD
note left
Instruct the DA1459x to reset. Once it does, the new image
will run.
end note
tgt -> ht: SUOSERIAL_CMP_OK
deactivate ht
deactivate tgt

...DA1459x resets and loads new firmware image...
@enduml