# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, ci ]
  pull_request:
    branches: [ main, ci ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: diasemi/smartsnippetsstudio:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Copy SDK files from AWS
        run: |
          aws s3 cp s3://dlglpcgithubci/sdk/da1459x-sdk10.1.2.86.zip ..
         
      - name: Unzip SDK
        run: |
          unzip ../da1459x-sdk10.1.2.86.zip -d ..
          
      - name: Import examples
        run: |
          /opt/DiaSemi/SmartSnippetsStudio2.0.16/CDT/SmartSnippets_Studio --launcher.suppressErrors -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -data ../SDK_10.1.2.86 -importAll .
          
      - name: Build examples
        run: |
          /opt/DiaSemi/SmartSnippetsStudio2.0.16/CDT/SmartSnippets_Studio --launcher.suppressErrors -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -data ../SDK_10.1.2.86 -build all

      - name: postprocess results
        run: |
          python3 .github/scripts/process_build.py 

      - name: upload aws
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          aws s3 sync --delete artifacts  s3://lpccs-docs.renesas.com/examples_arfitacts/da1459x
